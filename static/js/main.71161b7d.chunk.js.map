{"version":3,"sources":["components/PictureCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Score/index.js","App.js","index.js"],"names":["imageStyle","width","height","objectFit","PictureCard","props","react_default","a","createElement","className","onClick","selectPicture","id","alt","src","image","style","Wrapper","children","Title","Score","shuffleArray","array","i","length","j","Math","floor","random","temp","App","state","pictures","selectedPicturesArray","currentScore","_this","includes","alert","setState","push","_this2","this","shuffledPictures","components_Wrapper","components_Title","components_Score","map","picture","components_PictureCard","key","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"k6RAGIA,SAAa,CACfC,MAAO,QACPC,OAAQ,QACRC,UAAW,UAiBEC,MAdf,SAAqBC,GACnB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,QAAME,QAAS,kBAAML,EAAMM,cAAcN,EAAMO,KAAKH,UAAU,UAC9DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKK,IAAKR,EAAMO,GAAIE,IAAKT,EAAMU,MAAOC,MAAOhB,cCPtCiB,MAJf,SAAiBZ,GACf,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,iBCG1BC,MAJf,SAAed,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,iBCGvBE,MAJf,SAAef,GACb,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,WCItC,SAASG,EAAaC,GAEpB,IADA,IAAIC,EAAID,EAAME,OAAS,EAChBD,EAAI,EAAGA,IAAK,CACjB,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCM,EAAOP,EAAMC,GACnBD,EAAMC,GAAKD,EAAMG,GACjBH,EAAMG,GAAKI,EAEb,OAAOP,MAkDMQ,6MA/CfC,MAAQ,CACNC,WACAC,sBAAuB,GACvBC,aAAc,KAKhBvB,cAAgB,SAAAC,GAChB,IAAIqB,EAAwBE,EAAKJ,MAAME,sBAClCA,EAAsBG,SAASxB,IAChCyB,MAAM,oBACNF,EAAKG,SAAS,CAACN,WAAUC,sBAAuB,GAAIC,aAAc,MAGhED,EAAsBM,KAAK3B,GACU,KAAjCqB,EAAsBT,QACxBa,MAAM,uBACNF,EAAKG,SAAS,CAACN,WAAUC,sBAAuB,GAAIC,aAAc,MAEpEC,EAAKG,SAAS,CAACJ,aAAcD,EAAsBT,SACnDH,EAAac,EAAKJ,MAAMC,UACxBG,EAAKG,SAAS,CAAEN,wFAKb,IAAAQ,EAAAC,KACDC,EAAmBrB,EAAaoB,KAAKV,MAAMC,UACjD,OACE1B,EAAAC,EAAAC,cAACmC,EAAD,KACErC,EAAAC,EAAAC,cAACoC,EAAD,oBACAtC,EAAAC,EAAAC,cAACqC,EAAD,oBAAoBJ,KAAKV,MAAMG,cAE9BQ,EAAiBI,IAAI,SAAAC,GAAO,OAC7BzC,EAAAC,EAAAC,cAACwC,EAAD,CACErC,cAAiB6B,EAAK7B,cACpBC,GAAImC,EAAQnC,GACZqC,IAAKF,EAAQnC,GACbG,MAAOgC,EAAQhC,UATrB,YA/BcmC,aCblBC,IAASC,OAAO9C,EAAAC,EAAAC,cAAC6C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.71161b7d.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nvar imageStyle = {\n  width: '325px',\n  height: '325px',\n  objectFit: 'cover'\n}\n\nfunction PictureCard(props) {\n  return (\n    <div className=\"card\">\n      <span onClick={() => props.selectPicture(props.id)} className=\"select\">\n      <div className=\"img-container\">\n        <img alt={props.id} src={props.image} style={imageStyle}/>\n      </div>\n      \n       \n      </span>\n    </div>\n  );\n}\n\nexport default PictureCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Score(props) {\n  return <h1 className=\"score\">{props.children}</h1>;\n}\n\nexport default Score;\n","import React, { Component } from 'react';\nimport './App.css';\nimport pictures from \"./pictures.json\";\nimport PictureCard from \"./components/PictureCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Score from \"./components/Score\";\n\nfunction shuffleArray(array) {\n  let i = array.length - 1;\n  for (; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    const temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n  return array;\n}\nclass App extends Component {\nstate = {\n  pictures,\n  selectedPicturesArray: [],\n  currentScore: 0\n};\n\n\n\nselectPicture = id => {\nlet selectedPicturesArray = this.state.selectedPicturesArray;\n  if(selectedPicturesArray.includes(id)) {\n    alert(\"Sorry, you lose!\");\n    this.setState({pictures, selectedPicturesArray: [], currentScore: 0});\n  }\n    else {\n      selectedPicturesArray.push(id);\n      if (selectedPicturesArray.length === 12) {\n        alert(\"Nice job!  You win!\");\n        this.setState({pictures, selectedPicturesArray: [], currentScore: 0});\n      } else {\n      this.setState({currentScore: selectedPicturesArray.length});\n      shuffleArray(this.state.pictures);\n      this.setState({ pictures });\n    }\n  };\n};\n \nrender() {\n  const shuffledPictures = shuffleArray(this.state.pictures);\n  return (\n    <Wrapper>\n      <Title>Clicky Game</Title>\n      <Score>Your Score: {this.state.currentScore}\n      </Score>\n      {shuffledPictures.map(picture => (\n      <PictureCard\n        selectPicture = {this.selectPicture}\n          id={picture.id}\n          key={picture.id}\n          image={picture.image}\n        />\n        ))};\n    </Wrapper>\n  )\n}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}